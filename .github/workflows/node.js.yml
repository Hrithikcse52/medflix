name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
env:
  REACT_APP_ENV: ${{secrets.REACT_APP_ENV}}
  REACT_APP_BACK_END_URL: ${{secrets.REACT_APP_BACK_END_URL}}
  REACT_APP_FRONT_END_URL: ${{secrets.REACT_APP_FRONT_END_URL}}
  USERNAME: ${{secrets.USERNAME}}
  HOST: ${{secrets.HOST}}
jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Create .env files
        run: |
          echo "REACT_APP_ENV=$REACT_APP_ENV" > .env 
          echo "REACT_APP_BACK_END_URL=$REACT_APP_BACK_END_URL" >> .env 
          echo "REACT_APP_FRONT_END_URL=$REACT_APP_FRONT_END_URL" >> .env 
      - name: Installing packages
        run: npm i
      - name: Creating Build
        run: npm run build        
      - name: show files
        run : ls -la > /home/ubuntu/files.txt
#         run : |
#           sudo mkdir -p /builds/ssh
#           sudo chmod 700 /builds/ssh
#           sudo touch /builds/ssh/ssh_key
#           echo "$KEY" > /builds/ssh/ssh_key
#           sudo chmod 400 /builds/ssh/ssh_key
      - name: copy files to remote server
        run: rsync --omit-dir-times -av -e 'ssh -i /home/ubuntu/key.pem -o StrictHostKeyChecking=no' . $USERNAME@$HOST:/home/ubuntu/medflixFrontend/
#       - name: Deploy
#         run: ssh -i /builds/ssh/ssh_key $USERNAME@$HOST -o StrictHostKeyChecking=no pm2 restart all
#       - name: Get current date # get the date of the build
#         id: date
#         run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"
#       - name: Build the Docker image # push The image to the docker hub
#         run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}
#       - name: docker login
#         run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
#       - name: Docker Push
#         run: docker push $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}
#       - name: executing remote ssh commands using password
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USERNAME }}
#           key: ${{ secrets.KEY }}
#           port: 22
#           script: sudo docker run -d --name backend -p 5000:5000 ${{ secrets.DOCKER_USER }}/${{ secrets.REPO_NAME }}:${{ steps.date.outputs.date }}
